{"componentChunkName":"component---src-templates-docs-js","path":"/sQafL3HVXtOZEnZ6BLbL","result":{"data":{"site":{"siteMetadata":{"title":"My BooGi App","docsLocation":"","docsLocationType":"","editable":true}},"mdx":{"fields":{"id":"35378a79-96eb-5f7c-bbc2-8fb726f9fc2a","title":"Make something configurable per-repo","slug":"/sQafL3HVXtOZEnZ6BLbL"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Make something configurable per-repo\",\n  \"editable\": false\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"div\", {\n    align: \"center\",\n    style: {\n      \"backgroundColor\": \"#e5ecff\"\n    }\n  }, \"    \", mdx(\"br\", null), \"    \", mdx(\"div\", null, \"DOC\"), \"    \", mdx(\"h1\", null, \"Make something configurable per-repo\"), \"    \", mdx(\"br\", null), \"  \"), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Files Used:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83D\\uDCC4 src/cli/commands/test.ts\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83D\\uDCC4 src/shared/repo-config.ts\"), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Sometimes, we want something to be configurable - depending on the specific client.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"We allow that using a configuration in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"swimm.json\"), \".\"), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In this step we see how the configuration value will be used - the warning will not be shown in case the user chooses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \" for the configuration value\"), mdx(\"div\", {\n    style: {\n      \"background\": \"#e5ecff\",\n      \"padding\": \"10px 10px 10px 10px\",\n      \"borderBottom\": \"1px solid #c1c7d0\",\n      \"borderRadius\": \"4px\"\n    }\n  }, \"    \\uD83D\\uDCC4 src/cli/commands/test.ts  \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"\\u2B1C 15         return ERROR_RETURN_CODE;\\n\\u2B1C 16       }\\n\\u2B1C 17     \\n\\uD83D\\uDFE9 18       if (state.get('cwd') !== process.cwd() && repoConfig.get({ key: 'show_warning_for_running_tests_not_from_repo_base_dir', defaultValue: true })) {\\n\\u2B1C 19    +  if (state.get('cwd') !== process.cwd()) {\\n\\u2B1C 20         pprint.out(`\\\\n${pprint.styles.warning(\\\"You are running the tests not from the repo's base dir.\\\")}`);\\n\\u2B1C 21       }\\n\\u2B1C 22     \\n\")), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"It is important to define a default value here so in case someone in the code ever tries to get this value and it's not defined - we will use a value that makes sense\"), mdx(\"div\", {\n    style: {\n      \"background\": \"#e5ecff\",\n      \"padding\": \"10px 10px 10px 10px\",\n      \"borderBottom\": \"1px solid #c1c7d0\",\n      \"borderRadius\": \"4px\"\n    }\n  }, \"    \\uD83D\\uDCC4 src/shared/repo-config.ts  \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"\\u2B1C 8        reset_on_done_without_asking: true,\\n\\u2B1C 9        avoid_pre_commit_hooks_on_storing_swimmer_solution: false,\\n\\u2B1C 10       docker_mode: false,\\n\\uD83D\\uDFE9 11       show_warning_for_running_tests_not_from_repo_base_dir: true,\\n\\u2B1C 12       autosync_applicable_units: false,\\n\\u2B1C 13     };\\n\\u2B1C 14     \\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This file was generated by Swimm. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://swimm.io/link?l=c3dpbW0lM0ElMkYlMkZyZXBvcyUyRnZlZXp2eEN1enBQclJMTFhXRDJFJTJGZG9jcyUyRnNRYWZMM0hWWHRPWkVuWjZCTGJM\"\n  }), \"Click here to view it in the app\"), \". Timestamp: 2021-04-20T19:12:42.916Z\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#files-used","title":"Files Used:"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"sQafL3HVXtOZEnZ6BLbL.md","fields":null},"frontmatter":{"metaTitle":null,"showMetadata":null,"editable":false,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"master"},"gitCommit":{"hash":"0cb17677e25377d6041a73fa8033496a1bb1ce03","date":"2021-04-21 03:46"}},"pageContext":{"id":"35378a79-96eb-5f7c-bbc2-8fb726f9fc2a"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}