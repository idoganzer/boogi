{"componentChunkName":"component---src-templates-docs-js","path":"/FCukTWDIx6WJmwhlR9oY","result":{"data":{"site":{"siteMetadata":{"title":"My BooGi App","docsLocation":"","docsLocationType":"","editable":true}},"mdx":{"fields":{"id":"4e70e71d-0b0e-59f4-a707-3bc523d2a2e6","title":"Fetching app data","slug":"/FCukTWDIx6WJmwhlR9oY"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Fetching app data\",\n  \"editable\": false\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"div\", {\n    align: \"center\",\n    style: {\n      \"backgroundColor\": \"#e5ecff\"\n    }\n  }, \"    \", mdx(\"br\", null), \"    \", mdx(\"div\", null, \"DOC\"), \"    \", mdx(\"h1\", null, \"Fetching app data\"), \"    \", mdx(\"br\", null), \"  \"), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Files Used:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83D\\uDCC4 src/app/common/components/App.vue\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83D\\uDCC4 src/app/common/mixins/storeModulesWrapper.js\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83D\\uDCC4 src/app/common/pages/ExercisePage.vue\"), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When the swimmer starts the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"swimm\"), \" app, there are two main sources of data the app uses:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In all of the pages - the online database (Firebase Firestore), such as workspaces and upvotes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Local repo files - when inside a repo route: the files inside in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".swm\"), \" directory\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Each page is responsible to fetch the data it needs in the stores, if the data is already in the store then the view will just get it from the store.\"), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"On every app load or refresh we load \\u201Cdefault\\u201D data (workspaces, upvotes..) as long as the user is signed in and in a valid route.\"), mdx(\"div\", {\n    style: {\n      \"background\": \"#e5ecff\",\n      \"padding\": \"10px 10px 10px 10px\",\n      \"borderBottom\": \"1px solid #c1c7d0\",\n      \"borderRadius\": \"4px\"\n    }\n  }, \"    \\uD83D\\uDCC4 src/app/common/components/App.vue  \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"\\u2B1C 44           handler: async function (newUser, oldUser) {\\n\\u2B1C 45             if (!oldUser && newUser && this.$route.fullPath !== '/404') {\\n\\u2B1C 46               this.loading = true;\\n\\uD83D\\uDFE9 47               await this.setDefaultAppData();\\n\\u2B1C 48               this.loading = false;\\n\\u2B1C 49             } else if (oldUser && !newUser) {\\n\\u2B1C 50               //TODO: unsubscribe all open subscriptions\\n\")), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/app/common/mixins/storeModulesWrapper.js \\u2713\"), \" we have multiple data initialize functions to be used by the views to load required data.\\ne.g \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setUnitData\"), \" can be called on each view that need a specific exercise/doc data. the function loads the local unit \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"swm\"), \" file.\"), mdx(\"div\", {\n    style: {\n      \"background\": \"#e5ecff\",\n      \"padding\": \"10px 10px 10px 10px\",\n      \"borderBottom\": \"1px solid #c1c7d0\",\n      \"borderRadius\": \"4px\"\n    }\n  }, \"    \\uD83D\\uDCC4 src/app/common/mixins/storeModulesWrapper.js  \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"\\u2B1C 159          await this.fetchDomainSettings();\\n\\u2B1C 160          await this.fetchUserUpvotes({ userId: this.user.uid });\\n\\u2B1C 161        },\\n\\uD83D\\uDFE9 162        async setUnitData() {\\n\\uD83D\\uDFE9 163          try {\\n\\uD83D\\uDFE9 164            if (this.$route.params.unitId && !['new', DEMO_CONTENT_IDS.EXAMPLE_DOC_ID].includes(this.$route.params.unitId)) {\\n\\uD83D\\uDFE9 165              await this.loadLocalSwmFile({ unitId: this.$route.params.unitId, repoId: this.$route.params.repoId, shouldAutofix: true });\\n\\uD83D\\uDFE9 166            }\\n\\uD83D\\uDFE9 167          } catch (error) {\\n\\uD83D\\uDFE9 168            console.error('The app failed to fetch the unit swm file:', error);\\n\\uD83D\\uDFE9 169          }\\n\\uD83D\\uDFE9 170        },\\n\\u2B1C 171        async setPlayListData() {\\n\\u2B1C 172          try {\\n\\u2B1C 173            if (this.$route.params.repoId === SWIMM_PUBLIC_CONTENT_REPO_ID) {\\n\")), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In this step we calls \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setUnitData\"), \" to load the exercise data and display it in the exercise page.\"), mdx(\"div\", {\n    style: {\n      \"background\": \"#e5ecff\",\n      \"padding\": \"10px 10px 10px 10px\",\n      \"borderBottom\": \"1px solid #c1c7d0\",\n      \"borderRadius\": \"4px\"\n    }\n  }, \"    \\uD83D\\uDCC4 src/app/common/pages/ExercisePage.vue  \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"\\u2B1C 48         if (!assertResult) {\\n\\u2B1C 49           return;\\n\\u2B1C 50         }\\n\\uD83D\\uDFE9 51         await this.setUnitData();\\n\\u2B1C 52         this.swm = this.getUnitFromLocalRepo(this.$route.params.unitId, this.$route.params.repoId);\\n\\u2B1C 53         this.assertActualExercise();\\n\\u2B1C 54         this.loading = false;\\n\")), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In this step we added the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setHomeData\"), \" function that will be called from the home page. This function load a lot of data, luckily this data will be reused across the app and will be fetched only once.\"), mdx(\"div\", {\n    style: {\n      \"background\": \"#e5ecff\",\n      \"padding\": \"10px 10px 10px 10px\",\n      \"borderBottom\": \"1px solid #c1c7d0\",\n      \"borderRadius\": \"4px\"\n    }\n  }, \"    \\uD83D\\uDCC4 src/app/common/mixins/storeModulesWrapper.js  \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"\\u2B1C 219            console.error('The app failed to fetch all repos data:', error);\\n\\u2B1C 220          }\\n\\u2B1C 221        },\\n\\uD83D\\uDFE9 222        async setHomeData() {\\n\\uD83D\\uDFE9 223          try {\\n\\uD83D\\uDFE9 224            await this.setSwimmPublicPlaylist();\\n\\uD83D\\uDFE9 225            await this.fetchSwimmerRepos({ uid: this.user.uid });\\n\\uD83D\\uDFE9 226            await this.fetchOpenSourceRepos();\\n\\uD83D\\uDFE9 227            await this.fetchSwimmerWorkspaces();\\n\\uD83D\\uDFE9 228            await this.fetchAllWorkspacesRepos();\\n\\uD83D\\uDFE9 229            await this.fetchWorkspaceInvites();\\n\\uD83D\\uDFE9 230            await this.fetchDismissedWorkspaceInvites();\\n\\uD83D\\uDFE9 231          } catch (error) {\\n\\uD83D\\uDFE9 232            console.error('The app failed to fetch all repos data:', error);\\n\\uD83D\\uDFE9 233          }\\n\\uD83D\\uDFE9 234        },\\n\\u2B1C 235        async setSwimmPublicPlaylist() {\\n\\u2B1C 236          // fetch swimm \\\"get started\\\" public playlist\\n\\u2B1C 237          const repoId = SWIMM_PUBLIC_CONTENT_REPO_ID;\\n\")), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In general, once data is fetched / loaded, we store it in the state so most of the time we won't need to fetch / load it again. If for example you go to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/repos\"), \", let it load, go to another page and come back to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/repos\"), \" (without reloading the app, e.g. by clicking the Swimm logo at the top left corner), you won't have to wait a second time.\"), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This file was generated by Swimm. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://swimm.io/link?l=c3dpbW0lM0ElMkYlMkZyZXBvcyUyRnZlZXp2eEN1enBQclJMTFhXRDJFJTJGZG9jcyUyRkZDdWtUV0RJeDZXSm13aGxSOW9Z\"\n  }), \"Click here to view it in the app\"), \". Timestamp: 2021-04-20T19:12:42.722Z\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#files-used","title":"Files Used:"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"FCukTWDIx6WJmwhlR9oY.md","fields":null},"frontmatter":{"metaTitle":null,"showMetadata":null,"editable":false,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"master"},"gitCommit":{"hash":"0cb17677e25377d6041a73fa8033496a1bb1ce03","date":"2021-04-21 03:46"}},"pageContext":{"id":"4e70e71d-0b0e-59f4-a707-3bc523d2a2e6"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}