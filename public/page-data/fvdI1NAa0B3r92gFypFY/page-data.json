{"componentChunkName":"component---src-templates-docs-js","path":"/fvdI1NAa0B3r92gFypFY","result":{"data":{"site":{"siteMetadata":{"title":"My BooGi App","docsLocation":"","docsLocationType":"","editable":true}},"mdx":{"fields":{"id":"71b56f91-af71-50d8-8f27-5eff2574ed80","title":"CLI Utils","slug":"/fvdI1NAa0B3r92gFypFY"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CLI Utils\",\n  \"editable\": false\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"div\", {\n    align: \"center\",\n    style: {\n      \"backgroundColor\": \"#e5ecff\"\n    }\n  }, \"    \", mdx(\"br\", null), \"    \", mdx(\"div\", null, \"DOC\"), \"    \", mdx(\"h1\", null, \"CLI Utils\"), \"    \", mdx(\"br\", null), \"  \"), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Files Used:\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83D\\uDCC4 src/cli/utils/cli-utils.ts\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83D\\uDCC4 src/cli/commands/hint.ts\"), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"There are many functions that are used across multiple CLI commands. When these functions implement a logic relevant only for the CLI, we put these functions in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cli-utils.ts\"), \".\"), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For example, this function is used by many commands to validate that the user is indeed logged in and that a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".swm\"), \" folder exists.\"), mdx(\"div\", {\n    style: {\n      \"background\": \"#e5ecff\",\n      \"padding\": \"10px 10px 10px 10px\",\n      \"borderBottom\": \"1px solid #c1c7d0\",\n      \"borderRadius\": \"4px\"\n    }\n  }, \"    \\uD83D\\uDCC4 src/cli/utils/cli-utils.ts  \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"\\u2B1C 68       return state.has('token');\\n\\u2B1C 69     }\\n\\u2B1C 70     \\n\\uD83D\\uDFE9 71     export function isLoggedInAndSwmFolder() {\\n\\uD83D\\uDFE9 72       if (!isLoggedIn()) {\\n\\uD83D\\uDFE9 73         pprint.err(pprint.styles.error('You should sign in first. Start the browser to login using'), pprint.styles.command('swimm start'));\\n\\uD83D\\uDFE9 74         return false;\\n\\uD83D\\uDFE9 75       }\\n\\uD83D\\uDFE9 76       if (!isSwmFolderExists()) {\\n\\uD83D\\uDFE9 77         printErrorNoSwmFolder();\\n\\uD83D\\uDFE9 78         return false;\\n\\uD83D\\uDFE9 79       }\\n\\uD83D\\uDFE9 80     \\n\\uD83D\\uDFE9 81       return true;\\n\\uD83D\\uDFE9 82     }\\n\\u2B1C 83     \\n\\u2B1C 84     export function printErrorNoSwmFolder() {\\n\\u2B1C 85       pprint.err(pprint.styles.error(`There is no ${config.SWM_FOLDER_IN_REPO} folder in your repo.`));\\n\")), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Here you can see how it is used in the beggining of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hint\"), \" command\"), mdx(\"div\", {\n    style: {\n      \"background\": \"#e5ecff\",\n      \"padding\": \"10px 10px 10px 10px\",\n      \"borderBottom\": \"1px solid #c1c7d0\",\n      \"borderRadius\": \"4px\"\n    }\n  }, \"    \\uD83D\\uDCC4 src/cli/commands/hint.ts  \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"\\u2B1C 9      \\n\\u2B1C 10     export async function hint() {\\n\\u2B1C 11       state.assertUnitStarted();\\n\\uD83D\\uDFE9 12       if (!cliUtils.isLoggedInAndSwmFolder()) {\\n\\uD83D\\uDFE9 13         // Error messages are printed within the utils function isLoggedInAndSwmFolder\\n\\uD83D\\uDFE9 14         return ERROR_RETURN_CODE;\\n\\uD83D\\uDFE9 15       }\\n\\u2B1C 16     \\n\\u2B1C 17       if (!state.get('swimm_files_run_already', false)) {\\n\\u2B1C 18         await files();\\n\")), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In this Unit we covered a specific, simple case where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cli-utils.ts\"), \" is used. Remember to look for useful files within this file, and to extend its functionality if needed.\"), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This file was generated by Swimm. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://swimm.io/link?l=c3dpbW0lM0ElMkYlMkZyZXBvcyUyRnZlZXp2eEN1enBQclJMTFhXRDJFJTJGZG9jcyUyRmZ2ZEkxTkFhMEIzcjkyZ0Z5cEZZ\"\n  }), \"Click here to view it in the app\"), \". Timestamp: 2021-04-20T19:12:42.872Z\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#files-used","title":"Files Used:"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"fvdI1NAa0B3r92gFypFY.md","fields":null},"frontmatter":{"metaTitle":null,"showMetadata":null,"editable":false,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"master"},"gitCommit":{"hash":"0cb17677e25377d6041a73fa8033496a1bb1ce03","date":"2021-04-21 03:46"}},"pageContext":{"id":"71b56f91-af71-50d8-8f27-5eff2574ed80"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}